export declare enum PicoLLMEndpoint {
    END_OF_SENTENCE = 0,
    COMPLETION_TOKEN_LIMIT_REACHED = 1,
    STOP_PHRASE_ENCOUNTERED = 2
}
export type PicoLLMInitOptions = {
    device?: string;
};
export type PicoLLMInputOptions = {
    libraryPath?: string;
};
export type PicoLLMOptions = PicoLLMInitOptions & PicoLLMInputOptions;
export type PicoLLMGenerateOptions = {
    completionTokenLimit?: number;
    stopPhrases?: string[];
    seed?: number;
    presencePenalty?: number;
    frequencyPenalty?: number;
    temperature?: number;
    topP?: number;
    numTopChoices?: number;
    streamCallback?: (token: string) => void;
};
export type PicoLLMUsage = {
    promptTokens: number;
    completionTokens: number;
};
export type PicoLLMToken = {
    token: string;
    logProb: number;
};
export type PicoLLMCompletionToken = {
    token: PicoLLMToken;
    topChoices: PicoLLMToken[];
};
export type PicoLLMCompletion = {
    usage: PicoLLMUsage;
    endpoint: PicoLLMEndpoint;
    completionTokens: PicoLLMCompletionToken[];
    completion: string;
};
//# sourceMappingURL=types.d.ts.map