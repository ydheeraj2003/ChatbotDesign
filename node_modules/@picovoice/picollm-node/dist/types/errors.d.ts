import PvStatus from './pv_status_t';
export declare class PicoLLMError extends Error {
    private readonly _message;
    private readonly _messageStack;
    constructor(message: string, messageStack?: string[]);
    get message(): string;
    get messageStack(): string[];
    private static errorToString;
}
export declare class PicoLLMOutOfMemoryError extends PicoLLMError {
}
export declare class PicoLLMIOError extends PicoLLMError {
}
export declare class PicoLLMInvalidArgumentError extends PicoLLMError {
}
export declare class PicoLLMStopIterationError extends PicoLLMError {
}
export declare class PicoLLMKeyError extends PicoLLMError {
}
export declare class PicoLLMInvalidStateError extends PicoLLMError {
}
export declare class PicoLLMRuntimeError extends PicoLLMError {
}
export declare class PicoLLMActivationError extends PicoLLMError {
}
export declare class PicoLLMActivationLimitReachedError extends PicoLLMError {
}
export declare class PicoLLMActivationThrottledError extends PicoLLMError {
}
export declare class PicoLLMActivationRefusedError extends PicoLLMError {
}
export declare function pvStatusToException(pvStatus: PvStatus, errorMessage: string, messageStack?: string[]): void;
//# sourceMappingURL=errors.d.ts.map